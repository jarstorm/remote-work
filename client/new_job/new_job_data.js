Template.newJobData.events({
    'click #new_job_apply': function() {
        if ("email" === $('#new_job_apply').val()) {
            var company = Company.findOne(Session.get("selectedCompany"));
            $('#new_job_apply_text').val(company.email);
        } else {
            $('#new_job_apply_text').val('');
        }
    }
});

Template.newJobData.helpers({
    company: function() {
        return Company.findOne(Session.get("selectedCompany"));
    }    
});


NewJobBasicDataHelpers = (function () {
    var methods = {};
    methods.showContractSelect = function() {
        if ("Long term" === $('#new_job_contract_type').val()) {
            $('#new_job_contract_period').hide();
        } else {
            $('#new_job_contract_period').show();
        }
    };
    methods.navigate = function(newStep) {
    	$('#step1').hide();
    	$('#step2').hide();
    	$('#step3').hide();


    	if ("step1" === newStep) {
    		// Validate a field in roder to launch form validator. This is a trick
    		$('#new_job_form').bootstrapValidator('revalidateField', 'new_job_title');
    	} else if ("step2" === newStep) {
    		Session.set("newJobData", collectDataFromForm());
    		Session.set("newJobSetp2navigatorClass", "");
    	} else if ("step3" === newStep) {
    	    Session.set("newJobSetp3navigatorClass", "");
    	}

    	$('#'+newStep).show();
    }
    return methods;
})();



Template.newJobData.rendered = function() {

    $('#new_job_contract_period').hide();
    
    $("#new_job_form").bootstrapValidator({ // initialize the plugin
	    excluded: [':disabled'],
	    feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
        },
        live: 'enabled',
        submitButtons: 'button[type="submit"]',
        fields: {
            new_job_title: {
                validators: {
                        notEmpty: {
                            message: 'The title is required and cannot be empty'
                        }
                    }
            },
            new_job_description: {
                validators: {
                    callback: {
                        message: 'The description is required and cannot be empty',
                        callback: function(value, validator, $field) {
                            var code = $('#new_job_description').code();
                            // <p><br></p> is code generated by Summernote for empty content
                            return (code !== '' && code !== '<p><br></p>');
                        }
                    }
                }
            },
            new_job_required_skills: {
                validators: {
                    callback: {
                        message: 'The required skills are required and cannot be empty',
                        callback: function(value, validator, $field) {
                            var code = $('#new_job_required_skills').code();
                            // <p><br></p> is code generated by Summernote for empty content
                            return (code !== '' && code !== '<p><br></p>');
                        }
                    }
                }
            }
        }
    }).on('success.form.bv', function(e) {
        // Prevent form submission
        e.preventDefault();
        Session.set("newJobFormValid", true);
        NewJobBasicDataHelpers.navigate("step2");
    }).on('error.form.bv', function(e) {
        // Prevent form submission
        e.preventDefault();
        // Go to the top of the page
        $('html, body').animate({ scrollTop: 0 }, 'fast');
        Session.set("newJobFormValid", false);
    });
}


function collectDataFromForm() {

		var data = {};
		data.views = 0;
		// Company data
		var company = Company.findOne();
		if (company) {
			data.company_id = company._id;
			data.company_name = company.name;

			// Basic data
			data.title = $('#new_job_title').val();
			data.description = $('#new_job_description').code();
			data.required_skills = $('#new_job_required_skills').code();
			data.desired_skills = $('#new_job_desired_skills').code();
			data.contract_type = $('#new_job_contract_type').val();
			if ("Contract" === $('#new_job_contract_type').val()) {
				data.contract_period = $('#new_job_contract_period').val();
			}
			data.created_on = new Date().getTime();
			data.salary = $('#new_job_salary').val();
			data.salary_currency = $('#salary_option_button').val(); 
			data.apply = $('#new_job_apply').val();
			data.apply_text = $('#new_job_apply_text').val();
			
			// Advanced data
			data.office_support = $('#new_job_office_support').prop('checked');
			data.office_support_text = $('#new_job_office_support_text').val();
			data.travel = $('#new_job_travel').prop('checked');
			data.travel_text = $('#new_job_travel_text').val();
			data.training = $('#new_job_training').prop('checked');
			data.training_text= $('#new_job_training_text').val();
			data.overlap = $('#new_job_overlap').prop('checked');
			data.overlap_text = $('#new_job_overlap_text').val();
			data.equity = $('#new_job_equity').prop('checked');
			data.equity_value = $('#new_job_equity_text').val();
			data.ask_linkedin = $('#new_job_linkedin').prop('checked');
			data.ask_github = $('#new_job_github').prop('checked');
			data.country = $('#new_job_country').prop('checked');
			data.country_text = $('#new_job_country_text').val();
		}
		return data;
};
